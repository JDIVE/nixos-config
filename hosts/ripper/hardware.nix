# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "megaraid_sas" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/c8b5457c-39f7-464a-8b26-79af0c36fa4d";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/021A-ADA0";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = false;
  networking.interfaces.enp36s0f0.useDHCP = false;
  networking.interfaces.enp36s0f1.useDHCP = false;
  networking.interfaces.wlp38s0.useDHCP = false;
  networking.bridges = {
    "br0" = {
      interfaces = [ "enp36s0f0" ];
    };
    "br1" = {
      interfaces = [ "enp36s0f1" ];
    };
  };
  networking.interfaces.br0.ipv4.addresses = [ {
    address = "10.1.10.50";
    prefixLength = 24;
  } ];
  networking.interfaces.br1.ipv4.addresses = [ {
    address = "10.1.10.51";
    prefixLength = 24;
  } ];
  networking.defaultGateway = "10.1.10.1";
  networking.nameservers = ["10.1.10.1"];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
